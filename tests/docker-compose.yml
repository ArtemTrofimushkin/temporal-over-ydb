version: "3.5"

services:
  ydb:
    image: "cr.yandex/yc/yandex-docker-local-ydb:23.2"
    container_name: temporal-dev-ydb
    hostname: localhost
    command: "sh ./initialize_local_ydb -h localhost"
    ports:
      - "2135:2135"
      - "8765:8765"
      - "2136:2136"
    environment:
      YDB_USE_IN_MEMORY_PDISKS: "true"
      YDB_DEFAULT_LOG_LEVEL: WARN
      YDB_LOCAL_SURVIVE_RESTART: "true"
      GRPC_TLS_PORT: 2135
      GRPC_PORT: 2136
      MON_PORT: 8765
    healthcheck:
      test: "/ydb --no-password -e grpc://localhost:2136 -d /local scheme ls /local"
      timeout: 1s
      retries: 60
    networks:
      - temporal-dev-network
  elasticsearch:
    image: elasticsearch:7.10.1
    container_name: temporal-dev-elasticsearch
    ports:
      - "9200:9200"
    environment:
      # Make ES available both on _local_ and _site_,
      # and use _local_ for the publish_host.
      #
      # See here for details on network configuration:
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html
      - network.host=_local_,_site_
      - network.publish_host=_local_
      # Set storage limit to low number.
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms100m -Xmx100m
    networks:
      - temporal-dev-network
  prometheus:
    # Use http://localhost:9090/ to access Prometheus.
    image: prom/prometheus:v2.30.0
    container_name: temporal-dev-prometheus
    command:
      - "--log.level=error"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
  grafana:
    # Use http://localhost:3000/ to access Grafana (admin/admin).
    image: grafana/grafana:9.1.4
    container_name: temporal-dev-grafana
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
  temporal-ui:
    image: temporalio/ui:2.11.2
    container_name: temporal-dev-ui

networks:
  temporal-dev-network:
    driver: bridge
    name: temporal-dev-network
